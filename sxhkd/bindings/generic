# vim: ft=sxhkdrc
# sxhkd generic bindings
# _  __          _
#| |/ /___ _ __ | | ___ _ __
#| ' // _ \ '_ \| |/ _ \ '__|
#| . \  __/ |_) | |  __/ |
#|_|\_\___| .__/|_|\___|_|
#         |_|
#
# sxhkdrc/bindings/generic
#
### AUDIO BINDINGS ###
# puleaudio bindings
XF86Audio{Raise,Lower}Volume
	pactl set-sink-volume @DEFAULT_SINK@ {+,-}5%

# spotify audio control
shift + XF86Audio{Raise,Lower}Volume
	playerctl -p spotify,ncspot volume 0.05{+,-} 
# uses alt for browsers
{_, alt + }XF86Audio{Play,Stop,Next,Prev}
    playerctl {-p,-i} spotify,ncspot {play-pause,stop,next,previous}

### POLYBAR BINDINGS ###
super + h 
	polybar-msg cmd toggle; i3-msg gaps top all toggle 40

super + shift + h
	polybar-msg cmd restart

### FIREFOX BINDINGS ###
super + {_,alt + , shift + }numbersign
	$BROWSER {_,--private-window,--kiosk}

### F KEY BINDINGS ###
super + F1 
	thunar
super + F5
	$TERMINAL -e nvim
super + F11
	spotify-launcher
super + F12
	pavucontrol

### ROFI BINDINGS ###
# rofi emulates alt tab on windows with rofi
alt + Tab
	rofi -show window

# rofi menu to shutdown restart logout etc
super + BackSpace
	$HOME/scripts/rofi/sys-options.sh

# rofi for launching main programs
super + grave
	rofi -show drun

# rofi for launching all programs
super + Tab
	rofi -show run

# ani-cli in rofi
super + apostrophe
	ANI_CLI_SKIP_INTRO=1 ani-cli --rofi

# rofi change theme script
super + t
	$HOME/scripts/rofi/change-theme.sh

# rofi manually change background
super + b
	$HOME/scripts/rofi/change-bg.sh

# rofi open documentation offline
super + d
	$HOME/scripts/rofi/documentation.sh

# rofi open vbox vms
super + v
	$HOME/scripts/rofi/vbox.sh

# rofi marks scripts
super + {_,shift +} m
	$HOME/scripts/rofi/marks.sh {goto,make}

# rofi switch to workspace with manual entry
super + {_,shift + } minus
	$HOME/scripts/rofi/workspace.sh --move{_,-container}

super + {_,shift + } KP_Subtract
	$HOME/scripts/rofi/workspace.sh --move{_,-container}

### OTHER BINDINGS ###
# force kill a window
super + shift + q
    xdotool getactivewindow windowkill

# pause/unpause a window
super + {_,alt + } p
    kill -SIG{STOP,CONT} $(xdotool getactivewindow getwindowpid)

# save a screenshot
super + Print
    import $HOME/pictures/screenshots/$(date +%s).png

# kill xserver
control + alt + BackSpace
    killall Xorg

# poweroff
control + alt + shift + BackSpace
    poweroff

# reboot
control + alt + shift + Return
    reboot
